
package Paquete;

import Paquete.DAOclienteImplementacion;
import Paquete.Conexion;
import javax.swing.JOptionPane;
import java.sql.*;
import javax.swing.table.DefaultTableModel;

public class Inicio extends javax.swing.JFrame {
    
    

    Conexion conectar = Conexion.getInstance();

    public Inicio() {
        initComponents();
        this.setLocationRelativeTo(null);
        this.setTitle("Olympus Gym");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel3 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        txtIdC = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        txtNomC = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        txtEdadC = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        txtPesoC = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        txtTelC = new javax.swing.JTextField();
        btnRegistrarC = new javax.swing.JButton();
        btnEliminarC = new javax.swing.JButton();
        btnModificarC = new javax.swing.JButton();
        btnBuscarC = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabla_Cliente = new javax.swing.JTable();
        btn_CargarDatos = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        txtId_E = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        txtNom_E = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        txtTelE = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        txtEspecialidad = new javax.swing.JTextField();
        btnRegistrarEnt = new javax.swing.JButton();
        btnModificarEnt = new javax.swing.JButton();
        btnEliminarEnt = new javax.swing.JButton();
        btnBuscarEnt = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        tabla_Entrenador = new javax.swing.JTable();
        btnTablaE = new javax.swing.JButton();
        jPanel5 = new javax.swing.JPanel();
        jLabel11 = new javax.swing.JLabel();
        txtIdPlan = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        txtNomPlan = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        txtValorP = new javax.swing.JTextField();
        jLabel14 = new javax.swing.JLabel();
        txtDuracionP = new javax.swing.JTextField();
        jScrollPane3 = new javax.swing.JScrollPane();
        tabla_Plan = new javax.swing.JTable();
        btnRegistrarP = new javax.swing.JButton();
        btnBuscarP = new javax.swing.JButton();
        btnModificarP = new javax.swing.JButton();
        btnEliminarP = new javax.swing.JButton();
        btnCargarPlan = new javax.swing.JButton();
        jPanel6 = new javax.swing.JPanel();
        jLabel15 = new javax.swing.JLabel();
        txtIdA = new javax.swing.JTextField();
        jLabel16 = new javax.swing.JLabel();
        txtContrA = new javax.swing.JTextField();
        jLabel17 = new javax.swing.JLabel();
        txtNombreA = new javax.swing.JTextField();
        jLabel18 = new javax.swing.JLabel();
        txtTelefonoA = new javax.swing.JTextField();
        btnRegistrarA = new javax.swing.JButton();
        btnBuscarA = new javax.swing.JButton();
        btnModificarA = new javax.swing.JButton();
        btnEliminarA = new javax.swing.JButton();
        jScrollPane4 = new javax.swing.JScrollPane();
        tabla_Admin = new javax.swing.JTable();
        btnCargarTablaA = new javax.swing.JButton();
        jPanel7 = new javax.swing.JPanel();
        jPanel8 = new javax.swing.JPanel();
        jLabel19 = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox<>();
        jLabel20 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jLabel21 = new javax.swing.JLabel();
        jTextField2 = new javax.swing.JTextField();
        jLabel22 = new javax.swing.JLabel();
        jComboBox2 = new javax.swing.JComboBox<>();
        jLabel23 = new javax.swing.JLabel();
        jComboBox3 = new javax.swing.JComboBox<>();
        jLabel24 = new javax.swing.JLabel();
        jTextField3 = new javax.swing.JTextField();
        jScrollPane5 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jPanel9 = new javax.swing.JPanel();

        jPanel2.setBackground(new java.awt.Color(204, 204, 255));

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 660, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 325, Short.MAX_VALUE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(204, 255, 204));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setBackground(new java.awt.Color(0, 0, 0));
        jLabel1.setFont(new java.awt.Font("Sitka Text", 3, 48)); // NOI18N
        jLabel1.setText("Olympus Gym");
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 20, 410, 70));

        jTabbedPane1.setBackground(new java.awt.Color(204, 204, 255));

        jPanel3.setBackground(new java.awt.Color(204, 204, 255));

        jLabel2.setText("Id");

        txtIdC.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtIdCActionPerformed(evt);
            }
        });

        jLabel3.setText("Nombre: ");

        jLabel4.setText("Edad:");

        jLabel5.setText("Peso:");

        jLabel6.setText("Teléfono");

        btnRegistrarC.setText("Registrar");
        btnRegistrarC.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRegistrarCActionPerformed(evt);
            }
        });

        btnEliminarC.setText("Eliminar");
        btnEliminarC.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarCActionPerformed(evt);
            }
        });

        btnModificarC.setText("Modificar");
        btnModificarC.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnModificarCActionPerformed(evt);
            }
        });

        btnBuscarC.setText("Buscar");
        btnBuscarC.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarCActionPerformed(evt);
            }
        });

        tabla_Cliente.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "ID cliente", "Nombre", "Edad", "Peso", "Telefono"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.Integer.class, java.lang.Float.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tabla_Cliente);

        btn_CargarDatos.setText("Ver Información en la tabla");
        btn_CargarDatos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_CargarDatosActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(87, 87, 87)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3)
                    .addComponent(jLabel6)
                    .addComponent(jLabel5)
                    .addComponent(jLabel4)
                    .addComponent(btnRegistrarC, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnEliminarC, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(txtEdadC, javax.swing.GroupLayout.DEFAULT_SIZE, 118, Short.MAX_VALUE)
                        .addComponent(txtNomC)
                        .addComponent(txtPesoC)
                        .addComponent(txtIdC)
                        .addComponent(txtTelC))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(btnBuscarC, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnModificarC, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 476, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(126, 126, 126)
                        .addComponent(btn_CargarDatos, javax.swing.GroupLayout.PREFERRED_SIZE, 188, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(25, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(53, 53, 53)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtIdC, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btn_CargarDatos))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(txtNomC, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(txtEdadC, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(txtPesoC, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel6)
                            .addComponent(txtTelC, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(31, 31, 31)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnRegistrarC)
                            .addComponent(btnModificarC)))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 192, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnBuscarC)
                    .addComponent(btnEliminarC))
                .addContainerGap(110, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Clientes", jPanel3);

        jPanel4.setBackground(new java.awt.Color(204, 204, 255));

        jLabel7.setText("ID entrenador:");

        jLabel8.setText("Nombre:");

        jLabel9.setText("Telefono:");

        jLabel10.setText("Especialidad:");

        btnRegistrarEnt.setText("Registrar");
        btnRegistrarEnt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRegistrarEntActionPerformed(evt);
            }
        });

        btnModificarEnt.setText("Modificar");
        btnModificarEnt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnModificarEntActionPerformed(evt);
            }
        });

        btnEliminarEnt.setText("Eliminar");
        btnEliminarEnt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarEntActionPerformed(evt);
            }
        });

        btnBuscarEnt.setText("Buscar");
        btnBuscarEnt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarEntActionPerformed(evt);
            }
        });

        tabla_Entrenador.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "ID ", "Nombre", "Telefono ", "Especialidad"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.Integer.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(tabla_Entrenador);

        btnTablaE.setText("Ver tabla de los entrenadores ");
        btnTablaE.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTablaEActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(36, 36, 36)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jLabel7)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel9)
                            .addComponent(jLabel8))
                        .addGap(32, 32, 32))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel10, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnRegistrarEnt, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnModificarEnt, javax.swing.GroupLayout.Alignment.LEADING))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtNom_E, javax.swing.GroupLayout.DEFAULT_SIZE, 115, Short.MAX_VALUE)
                            .addComponent(txtId_E)
                            .addComponent(txtTelE, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(txtEspecialidad)
                            .addComponent(btnBuscarEnt))
                        .addGap(76, 76, 76)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnTablaE)))
                    .addComponent(btnEliminarEnt))
                .addContainerGap(34, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(44, 44, 44)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addComponent(btnTablaE)
                                .addGap(35, 35, 35))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel7)
                                    .addComponent(txtId_E, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(25, 25, 25)))
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel8)
                            .addComponent(txtNom_E, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(27, 27, 27)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel9)
                            .addComponent(txtTelE, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(31, 31, 31)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel10)
                            .addComponent(txtEspecialidad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(30, 30, 30)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnRegistrarEnt)
                            .addComponent(btnBuscarEnt))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnModificarEnt)
                            .addComponent(btnEliminarEnt))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(0, 52, Short.MAX_VALUE)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(231, 231, 231))))
        );

        jTabbedPane1.addTab("Entrenadores", jPanel4);

        jPanel5.setBackground(new java.awt.Color(204, 204, 255));

        jLabel11.setText("ID plan:");

        jLabel12.setText("Nombre:");

        jLabel13.setText("Valor:");

        jLabel14.setText("Duración:");

        tabla_Plan.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "ID ", "Nombre", "Valor", "Duración"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.Float.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane3.setViewportView(tabla_Plan);

        btnRegistrarP.setText("Registrar");
        btnRegistrarP.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRegistrarPActionPerformed(evt);
            }
        });

        btnBuscarP.setText("Buscar");
        btnBuscarP.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarPActionPerformed(evt);
            }
        });

        btnModificarP.setText("Modificar");
        btnModificarP.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnModificarPActionPerformed(evt);
            }
        });

        btnEliminarP.setText("Eliminar");
        btnEliminarP.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarPActionPerformed(evt);
            }
        });

        btnCargarPlan.setText("Ver tabla de Planes de entrenamiento ");
        btnCargarPlan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCargarPlanActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(79, 79, 79)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addGroup(jPanel5Layout.createSequentialGroup()
                            .addComponent(jLabel14)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(txtDuracionP))
                        .addGroup(jPanel5Layout.createSequentialGroup()
                            .addComponent(jLabel11)
                            .addGap(18, 18, 18)
                            .addComponent(txtIdPlan, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanel5Layout.createSequentialGroup()
                            .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel12)
                                .addComponent(jLabel13))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(txtNomPlan)
                                .addComponent(txtValorP))))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(btnModificarP, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnRegistrarP, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(38, 38, 38)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(btnBuscarP)
                            .addComponent(btnEliminarP))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 39, Short.MAX_VALUE)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnCargarPlan))
                .addGap(38, 38, 38))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(88, 88, 88)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel11)
                            .addComponent(txtIdPlan, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(31, 31, 31)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel12)
                            .addComponent(txtNomPlan, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(32, 32, 32)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel13)
                            .addComponent(txtValorP, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(34, 34, 34)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel14)
                            .addComponent(txtDuracionP, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(btnCargarPlan)
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(41, 41, 41)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnRegistrarP)
                    .addComponent(btnBuscarP))
                .addGap(31, 31, 31)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnModificarP)
                    .addComponent(btnEliminarP))
                .addContainerGap(40, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Planes", jPanel5);

        jPanel6.setBackground(new java.awt.Color(204, 204, 255));

        jLabel15.setText("ID administrador: ");

        jLabel16.setText("Contraseña:");

        jLabel17.setText("Nombre:");

        jLabel18.setText("Telefono: ");

        btnRegistrarA.setText("Registrar");
        btnRegistrarA.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRegistrarAActionPerformed(evt);
            }
        });

        btnBuscarA.setText("Buscar");
        btnBuscarA.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarAActionPerformed(evt);
            }
        });

        btnModificarA.setText("Modificar");
        btnModificarA.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnModificarAActionPerformed(evt);
            }
        });

        btnEliminarA.setText("Eliminar");
        btnEliminarA.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarAActionPerformed(evt);
            }
        });

        tabla_Admin.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane4.setViewportView(tabla_Admin);

        btnCargarTablaA.setText("Ver tabla de Administradores");
        btnCargarTablaA.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCargarTablaAActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGap(103, 103, 103)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel15)
                    .addComponent(jLabel16)
                    .addComponent(jLabel17)
                    .addComponent(jLabel18)
                    .addComponent(btnRegistrarA)
                    .addComponent(btnModificarA))
                .addGap(18, 18, 18)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnEliminarA)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnBuscarA)
                            .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(txtIdA)
                                .addComponent(txtContrA)
                                .addComponent(txtNombreA)
                                .addComponent(txtTelefonoA, javax.swing.GroupLayout.DEFAULT_SIZE, 140, Short.MAX_VALUE)))
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel6Layout.createSequentialGroup()
                                .addGap(109, 109, 109)
                                .addComponent(btnCargarTablaA))
                            .addGroup(jPanel6Layout.createSequentialGroup()
                                .addGap(28, 28, 28)
                                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 398, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap(19, Short.MAX_VALUE))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGap(59, 59, 59)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel15)
                    .addComponent(txtIdA, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnCargarTablaA))
                .addGap(35, 35, 35)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel16)
                            .addComponent(txtContrA, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(39, 39, 39)
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel17)
                            .addComponent(txtNombreA, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(47, 47, 47)
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel18)
                            .addComponent(txtTelefonoA, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(39, 39, 39)
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnRegistrarA)
                            .addComponent(btnBuscarA)))
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 223, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnModificarA)
                    .addComponent(btnEliminarA))
                .addContainerGap(54, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Administrador", jPanel6);

        jPanel7.setBackground(new java.awt.Color(204, 204, 255));
        jPanel7.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());
        jTabbedPane1.addTab("Registro Diario", jPanel7);

        jPanel8.setBackground(new java.awt.Color(204, 204, 255));

        jLabel19.setText("ID cliente:");

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jLabel20.setText("ID pago:");

        jLabel21.setText("Fecha:");

        jLabel22.setText("ID plan:");

        jComboBox2.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jLabel23.setText("ID entrenador");

        jComboBox3.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jLabel24.setText("Estado:");

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "ID pago", "Fecha", "ID plan", "ID cliente", "ID entrenador ", "Estado"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane5.setViewportView(jTable1);

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addGap(38, 38, 38)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addComponent(jLabel24)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextField3))
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addComponent(jLabel21)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addComponent(jLabel20)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextField1)))
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addGap(50, 50, 50)
                        .addComponent(jLabel22)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel19)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel23)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jComboBox3, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel8Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 40, Short.MAX_VALUE)
                        .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 559, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(31, 31, 31))))
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addGap(42, 42, 42)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel19)
                    .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel20)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel22)
                    .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel23)
                    .addComponent(jComboBox3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(39, 39, 39)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel21)
                    .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(37, 37, 37)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel24)
                        .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 244, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(29, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Pago membresia", jPanel8);

        javax.swing.GroupLayout jPanel9Layout = new javax.swing.GroupLayout(jPanel9);
        jPanel9.setLayout(jPanel9Layout);
        jPanel9Layout.setHorizontalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 800, Short.MAX_VALUE)
        );
        jPanel9Layout.setVerticalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 435, Short.MAX_VALUE)
        );

        jTabbedPane1.addTab("Factura", jPanel9);

        jPanel1.add(jTabbedPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 80, 800, 470));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void limpiarCamposC(){
        txtIdC.setText("");
        txtNomC.setText("");
        txtEdadC.setText("");
        txtPesoC.setText("");
        txtTelC.setText("");
    }
    
    private void limpiarCamposEnt(){
        txtId_E.setText("");
        txtNom_E.setText("");
        txtTelE.setText("");
        txtEspecialidad.setText("");
    }
    
    private void limpiarCampoPlanE(){
        txtIdPlan.setText("");
        txtNomPlan.setText("");
        txtValorP.setText("");
        txtDuracionP.setText("");
    }
    
    private void limpiarCampoAdmin(){
        txtIdA.setText("");
        txtContrA.setText("");
        txtNombreA.setText("");
        txtTelefonoA.setText("");
    }
    
    private void txtIdCActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtIdCActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtIdCActionPerformed

    private void btnRegistrarCActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRegistrarCActionPerformed
        
        DAOclienteImplementacion DAOcliente = new DAOclienteImplementacion();
        Cliente cliente = new Cliente();
        
        if(txtIdC.getText().equals("")|| txtNomC.getText().equals("")|| txtEdadC.getText().equals("")|| txtPesoC.getText().equals("")|| txtTelC.getText().equals("")){
            JOptionPane.showMessageDialog(null, "Asegurese de ingresar todos los datos");
        }else{
            int Idc = Integer.parseInt(txtIdC.getText());
            String nombreC = txtNomC.getText();
            int edadC = Integer.parseInt(txtEdadC.getText());
            float pesoC = Float.parseFloat(txtPesoC.getText());
            int telefonoC = Integer.parseInt(txtTelC.getText());

            cliente.setId_cliente(Idc);
            cliente.setNombreC(nombreC);
            cliente.setEdadC(edadC);
            cliente.setPesoC(pesoC);
            cliente.setTelefonoC(telefonoC);

            DAOcliente.registrarC(cliente);

            limpiarCamposC();
            
            JOptionPane.showMessageDialog(null, "Registro de nuevo cliente EXITOSO!!");
        }
        
        
        
    }//GEN-LAST:event_btnRegistrarCActionPerformed

    private void btnBuscarCActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarCActionPerformed
        
        DAOclienteImplementacion DAOcliente = new DAOclienteImplementacion();
        Cliente cliente = new Cliente();
        
        if(txtIdC.getText().equals("")){
            JOptionPane.showMessageDialog(null, "Digite el Id del cliente a buscar");
        }
        else{
            int Id = Integer.parseInt(txtIdC.getText());
            cliente.setId_cliente(Id);
            DAOcliente.buscarC(cliente);
            
            txtIdC.setText(String.valueOf(cliente.getId_cliente()));
            txtNomC.setText(cliente.getNombreC());
            txtEdadC.setText(String.valueOf(cliente.getEdadC()));
            txtPesoC.setText(String.valueOf(cliente.getPesoC()));
            txtTelC.setText(String.valueOf(cliente.getTelefonoC()));
            
            JOptionPane.showMessageDialog(null, "Busqueda EXITOSA!!");
        }
        
    }//GEN-LAST:event_btnBuscarCActionPerformed

    private void btnEliminarCActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarCActionPerformed
        
        DAOclienteImplementacion DAOcliente = new DAOclienteImplementacion();
        Cliente cliente = new Cliente();
        
        if(txtIdC.getText().equals("")){
            JOptionPane.showMessageDialog(null, "Ingrese el ID que desea eliminar");
        } else{
            int Id = Integer.parseInt(txtIdC.getText());
            cliente.setId_cliente(Id);
            
            DAOcliente.eliminarC(cliente);
            
            limpiarCamposC();
            
            JOptionPane.showMessageDialog(null, "Información ELIMINADa con EXITO!!");
        }
    }//GEN-LAST:event_btnEliminarCActionPerformed

    private void btnModificarCActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnModificarCActionPerformed
        
        DAOclienteImplementacion DAOcliente = new DAOclienteImplementacion();
        Cliente cliente = new Cliente();
        
        if(txtIdC.getText().equals("")|| txtNomC.getText().equals("")|| txtEdadC.getText().equals("")|| txtPesoC.getText().equals("")|| txtTelC.getText().equals("")){
            JOptionPane.showMessageDialog(null, "Por favor ingrese toda la informacion");
        }else{
            int Idc = Integer.parseInt(txtIdC.getText());
            String nombreC = txtNomC.getText();
            int edadC = Integer.parseInt(txtEdadC.getText());
            float pesoC = Float.parseFloat(txtPesoC.getText());
            int telefonoC = Integer.parseInt(txtTelC.getText());
            
            cliente.setId_cliente(Idc);
            cliente.setNombreC(nombreC);
            cliente.setEdadC(edadC);
            cliente.setPesoC(pesoC);
            cliente.setTelefonoC(telefonoC);
            
            DAOcliente.modificarC(cliente);
            limpiarCamposC();
            JOptionPane.showMessageDialog(null, "Información MODIFICADA con EXISTO!!");
        }
        
    }//GEN-LAST:event_btnModificarCActionPerformed

    private void btn_CargarDatosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_CargarDatosActionPerformed
        try {
            
            DefaultTableModel tabla = new DefaultTableModel();
            tabla_Cliente.setModel(tabla);
            
            Connection conexionS = conectar.conectar();
            PreparedStatement seleccionTabla = conexionS.prepareStatement("SELECT * FROM Cliente");
            ResultSet consulta = seleccionTabla.executeQuery();
            
            ResultSetMetaData datos = consulta.getMetaData();
            int CantColumnas = datos.getColumnCount();
            
            tabla.addColumn("ID cliente");
            tabla.addColumn("Nombre");
            tabla.addColumn("Edad");
            tabla.addColumn("Peso");
            tabla.addColumn("Telefono");
            
            int anchos[] ={90,90,90,90,90};
            for(int i = 0; i < CantColumnas; i++){
                tabla_Cliente.getColumnModel().getColumn(i).setPreferredWidth(anchos[i]);
            }
            
            while(consulta.next()){
                Object arreglo[] = new Object[CantColumnas];
                for(int i = 0; i < CantColumnas; i++){
                    arreglo[i] = consulta.getObject(i + 1);
                }
                tabla.addRow(arreglo);
            }
            
            conectar.desconectar();
            
        } catch (SQLException e) {
            System.out.println(e);
        }
    }//GEN-LAST:event_btn_CargarDatosActionPerformed

    private void btnRegistrarEntActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRegistrarEntActionPerformed
        
        DAOentrenadorImplementacion DAOentrenador = new DAOentrenadorImplementacion();
        Entrenador entrenador = new Entrenador();
        
        if(txtId_E.getText().equals("") || txtNom_E.getText().equals("") || txtTelE.getText().equals("") || txtEspecialidad.equals("")){
            JOptionPane.showMessageDialog(null, "Asegurese de ingresar todos los datos");
        }else{
            int IdE = Integer.parseInt(txtId_E.getText());
            String nombreE = txtNom_E.getText();
            int telefonoE = Integer.parseInt(txtTelE.getText());
            String especialidad = txtEspecialidad.getText();
            
            entrenador.setId_entrenador(IdE);
            entrenador.setNombreEnt(nombreE);
            entrenador.setTelefonoEnt(telefonoE);
            entrenador.setEspecialidadEnt(especialidad);
            
            DAOentrenador.registrarEnt(entrenador);
            
            limpiarCamposEnt();
            
            JOptionPane.showMessageDialog(null, "Registro de nuevo entrenador EXITOSO!!");
            
        }
        
    }//GEN-LAST:event_btnRegistrarEntActionPerformed

    private void btnBuscarEntActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarEntActionPerformed
        
        DAOentrenadorImplementacion DAOentrenador = new DAOentrenadorImplementacion();
        Entrenador entrenador = new Entrenador();
        
        if(txtId_E.getText().equals("")){
            JOptionPane.showMessageDialog(null, "Digite el ID a buscar");
        }else{
            int Id = Integer.parseInt(txtId_E.getText());
            entrenador.setId_entrenador(Id);
            DAOentrenador.buscarEnt(entrenador);
            
            txtId_E.setText(String.valueOf(entrenador.getId_entrenador()));
            txtNom_E.setText(entrenador.getNombreEnt());
            txtTelE.setText(String.valueOf(entrenador.getTelefonoEnt()));
            txtEspecialidad.setText(entrenador.getEspecialidadEnt());
            
            JOptionPane.showMessageDialog(null, "Busqueda EXITOSA!!");
        }
        
    }//GEN-LAST:event_btnBuscarEntActionPerformed

    private void btnEliminarEntActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarEntActionPerformed
        
        DAOentrenadorImplementacion DAOentrenador = new DAOentrenadorImplementacion();
        Entrenador entrenador = new Entrenador();
        
        if(txtId_E.getText().equals("")){
            JOptionPane.showMessageDialog(null, "Ingrese el ID que desea eliminar");
        }else{
            int Id = Integer.parseInt(txtId_E.getText());
            entrenador.setId_entrenador(Id);
            
            DAOentrenador.eliminarEnt(entrenador);
            
            limpiarCamposEnt();
            
            JOptionPane.showMessageDialog(null, "Información ELIMINADA con EXISTO!!");
        }
    }//GEN-LAST:event_btnEliminarEntActionPerformed

    private void btnModificarEntActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnModificarEntActionPerformed
        
        DAOentrenadorImplementacion DAOentrenador = new DAOentrenadorImplementacion();
        Entrenador entrenador = new Entrenador();
        
        if(txtId_E.getText().equals("") || txtNom_E.getText().equals("") || txtTelE.getText().equals("") || txtEspecialidad.getText().equals("")){
            JOptionPane.showMessageDialog(null, "Por favor ingrese toda la informació");
        }else{
            int Id = Integer.parseInt(txtId_E.getText());
            String nombreE = txtNom_E.getText();
            int telefonoE = Integer.parseInt(txtTelE.getText());
            String especialidad = txtEspecialidad.getText();
            
            entrenador.setId_entrenador(Id);
            entrenador.setNombreEnt(nombreE);
            entrenador.setTelefonoEnt(telefonoE);
            entrenador.setEspecialidadEnt(especialidad);
            
            DAOentrenador.modificarEnt(entrenador);
            
            limpiarCamposEnt();
            
            JOptionPane.showMessageDialog(null, "Información MODIFICADA con EXITO!!");
            
        }
        
    }//GEN-LAST:event_btnModificarEntActionPerformed

    private void btnTablaEActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTablaEActionPerformed
        
        try {
            
            DefaultTableModel tablaEnt = new DefaultTableModel();
            tabla_Entrenador.setModel(tablaEnt);
            
            Connection conexionE = conectar.conectar();
            PreparedStatement seleccionTablaE = conexionE.prepareStatement("SELECT * FROM Entrenador");
            ResultSet consulta = seleccionTablaE.executeQuery();
            
            ResultSetMetaData datosE = consulta.getMetaData();
            int CantidadCol = datosE.getColumnCount();
            
            tablaEnt.addColumn("ID");
            tablaEnt.addColumn("Nombre");
            tablaEnt.addColumn("Telefono");
            tablaEnt.addColumn("Especialidad");
            
            int anchosE[] = {90,90,90,90};
            for(int i = 0; i < CantidadCol; i++){
                tabla_Entrenador.getColumnModel().getColumn(i).setPreferredWidth(anchosE[i]);
            }
            while(consulta.next()){
                Object arregloE[] = new Object[CantidadCol];
                for(int i = 0; i < CantidadCol; i++){
                    arregloE[i] = consulta.getObject(i + 1);
                }
                tablaEnt.addRow(arregloE);
            }
            conectar.desconectar();
            
        } catch (SQLException e) {
        }
        
    }//GEN-LAST:event_btnTablaEActionPerformed

    private void btnRegistrarPActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRegistrarPActionPerformed
        
        DAOplanEimplementacion DAOplanE = new DAOplanEimplementacion();
        PlanEntrenamiento planEntrenamiento = new PlanEntrenamiento();
        
        if(txtIdPlan.getText().equals("") || txtNomPlan.getText().equals("") || txtValorP.getText().equals("") || txtDuracionP.getText().equals("")){
            JOptionPane.showMessageDialog(null, "Asegurese de ingresar todos los datos");
        } else{
            int IdP = Integer.parseInt(txtIdPlan.getText());
            String nombreP = txtNomPlan.getText();
            float valorP = Float.parseFloat(txtValorP.getText());
            int duracionP = Integer.parseInt(txtDuracionP.getText());
            
            planEntrenamiento.setId_PlanE(IdP);
            planEntrenamiento.setNombreP(nombreP);
            planEntrenamiento.setValorP(valorP);
            planEntrenamiento.setDuracionP(duracionP);
            
            DAOplanE.registrarPlanE(planEntrenamiento);
            
            limpiarCampoPlanE();
            
            JOptionPane.showMessageDialog(null, "Registro del nuevo plan EXITOSO!!");
            
        }
        
    }//GEN-LAST:event_btnRegistrarPActionPerformed

    private void btnBuscarPActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarPActionPerformed
        
        DAOplanEimplementacion DAOplanE = new DAOplanEimplementacion();
        PlanEntrenamiento planEntrenamiento = new PlanEntrenamiento();
        
        if(txtIdPlan.getText().equals("")){
            JOptionPane.showMessageDialog(null, "Digite el ID del plan a eliminar");
        }else{
            int IdP = Integer.parseInt(txtIdPlan.getText());
            planEntrenamiento.setId_PlanE(IdP);
            DAOplanE.buscarPlanE(planEntrenamiento);
            
            txtIdPlan.setText(String.valueOf(planEntrenamiento.getId_PlanE()));
            txtNomPlan.setText(planEntrenamiento.getNombreP());
            txtValorP.setText(String.valueOf(planEntrenamiento.getValorP()));
            txtDuracionP.setText(String.valueOf(planEntrenamiento.getDuracionP()));
            
            JOptionPane.showMessageDialog(null, "Busqueda EXITOSA!!");
            
        }
        
    }//GEN-LAST:event_btnBuscarPActionPerformed

    private void btnEliminarPActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarPActionPerformed
        
        DAOplanEimplementacion DAOplanE = new DAOplanEimplementacion();
        PlanEntrenamiento planEntrenamiento = new PlanEntrenamiento();
        
        if(txtIdPlan.getText().equals("")){
            JOptionPane.showMessageDialog(null, "Ingrese el ID a eliminar");
        }else{
            int IdP = Integer.parseInt(txtIdPlan.getText());
            planEntrenamiento.setId_PlanE(IdP);
            
            DAOplanE.eliminarPlanE(planEntrenamiento);
            
            limpiarCampoPlanE();
            
            JOptionPane.showMessageDialog(null, "Información ELIMINADA con EXITO!!");
        }
        
    }//GEN-LAST:event_btnEliminarPActionPerformed

    private void btnModificarPActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnModificarPActionPerformed
        
        DAOplanEimplementacion DAOplanE = new DAOplanEimplementacion();
        PlanEntrenamiento planEntrenamiento = new PlanEntrenamiento();
        
        if(txtIdPlan.getText().equals("") || txtNomPlan.getText().equals("") || txtValorP.getText().equals("") || txtDuracionP.getText().equals("")){
            JOptionPane.showMessageDialog(null, "Por favor ingrese toda la información");
        }else{
            int IdP = Integer.parseInt(txtIdPlan.getText());
            String nombreP = txtNomPlan.getText();
            float valorP = Float.parseFloat(txtValorP.getText());
            int duracionP = Integer.parseInt(txtDuracionP.getText());
            
            planEntrenamiento.setId_PlanE(IdP);
            planEntrenamiento.setNombreP(nombreP);
            planEntrenamiento.setValorP(valorP);
            planEntrenamiento.setDuracionP(duracionP);
            
            DAOplanE.modificarPlanE(planEntrenamiento);
            
            limpiarCampoPlanE();
            
            JOptionPane.showMessageDialog(null, "Información MODIFICADA con EXITO!!");
        }
        
    }//GEN-LAST:event_btnModificarPActionPerformed

    private void btnCargarPlanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCargarPlanActionPerformed
        
        try {
            
            DefaultTableModel tablaP = new DefaultTableModel();
            tabla_Plan.setModel(tablaP);
            
            Connection conexionP = conectar.conectar();
            PreparedStatement seleccionTablaP = conexionP.prepareStatement("SELECT * FROM plan_entrenamiento");
            ResultSet consultaP = seleccionTablaP.executeQuery();
            
            ResultSetMetaData datosP = consultaP.getMetaData();
            int CantidadCol = datosP.getColumnCount();
            
            tablaP.addColumn("ID");
            tablaP.addColumn("Nombre");
            tablaP.addColumn("Valor");
            tablaP.addColumn("Duración");
            
            int anchosP[] = {90, 90, 90, 90};
            for(int i = 0; i < CantidadCol; i++){
                tabla_Plan.getColumnModel().getColumn(i).setPreferredWidth(anchosP[i]);
            }
            
            while(consultaP.next()){
                Object arregloP[] = new Object[CantidadCol];
                for(int i = 0; i < CantidadCol; i ++){
                    arregloP[i] = consultaP.getObject(i + 1);
                }
                tablaP.addRow(arregloP);
            }
            
            conectar.desconectar();
            
        } catch (Exception e) {
        }
    }//GEN-LAST:event_btnCargarPlanActionPerformed

    private void btnRegistrarAActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRegistrarAActionPerformed
        
        DAOadministradorImplementacion DAOadministrador = new DAOadministradorImplementacion();
        Administrador administrador = new Administrador();
        
        if(txtIdA.getText().equals("") || txtContrA.getText().equals("") || txtNombreA.getText().equals("") || txtTelefonoA.getText().equals("")){
            JOptionPane.showMessageDialog(null, "Asegurese de infresar todos los datos");
        }else{
            int IdA = Integer.parseInt(txtIdA.getText());
            String contraseñaA = txtContrA.getText();
            String nombreA = txtNombreA.getText();
            int telefonoA = Integer.parseInt(txtTelefonoA.getText());
            
            administrador.setId_Admin(IdA);
            administrador.setContraseñaAdmin(contraseñaA);
            administrador.setNombreAdmin(nombreA);
            administrador.setTelefonoAdmin(telefonoA);
            
            DAOadministrador.registrarAdmin(administrador);
            
            limpiarCampoAdmin();
            
            JOptionPane.showMessageDialog(null, "Registro de nuevo Administrador EXITOSO!!");
            
        }
    }//GEN-LAST:event_btnRegistrarAActionPerformed

    private void btnCargarTablaAActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCargarTablaAActionPerformed
        
        try {
            
            DefaultTableModel tablaAdmin = new DefaultTableModel();
            tabla_Admin.setModel(tablaAdmin);
            
            Connection conexionA = conectar.conectar();
            PreparedStatement seleccionTablaA = conexionA.prepareStatement("SELECT * FROM Administrador");
            ResultSet consultaA = seleccionTablaA.executeQuery();
            
            ResultSetMetaData datosA = consultaA.getMetaData();
            int CantidadCol = datosA.getColumnCount();
            
            tablaAdmin.addColumn("Id");
            tablaAdmin.addColumn("Contraseña");
            tablaAdmin.addColumn("Nombre");
            tablaAdmin.addColumn("Telefono");
            
            int anchosA[] = {90, 90, 90, 90};
            for(int i = 0; i < CantidadCol; i++){
                tabla_Admin.getColumnModel().getColumn(i).setPreferredWidth(anchosA[i]);
            }
            
            while(consultaA.next()){
                Object arregloA[] = new Object[CantidadCol];
                for(int i = 0; i < CantidadCol; i++){
                    arregloA[i] = consultaA.getObject(i + 1);
                }
                tablaAdmin.addRow(arregloA);
            }
            
            conectar.desconectar();
            
        } catch (SQLException e) {
        }
        
    }//GEN-LAST:event_btnCargarTablaAActionPerformed

    private void btnBuscarAActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarAActionPerformed
        
        DAOadministradorImplementacion DAOadministrador = new DAOadministradorImplementacion();
        Administrador administrador = new Administrador();
        
        if(txtIdA.getText().equals("")){
            JOptionPane.showMessageDialog(null, "Digite el ID del administrador a buscar");
        }else{
            int IdA = Integer.parseInt(txtIdA.getText());
            administrador.setId_Admin(IdA);
            DAOadministrador.buscarAdmin(administrador);
            
            txtIdA.setText(String.valueOf(administrador.getId_Admin()));
            txtContrA.setText(administrador.getContraseñaAdmin());
            txtNombreA.setText(administrador.getNombreAdmin());
            txtTelefonoA.setText(String.valueOf(administrador.getTelefonoAdmin()));
            
            JOptionPane.showMessageDialog(null, "Busqueda EXITOSA!!");
            
        }
        
    }//GEN-LAST:event_btnBuscarAActionPerformed

    private void btnEliminarAActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarAActionPerformed
        
        DAOadministradorImplementacion DAOadministrador = new DAOadministradorImplementacion();
        Administrador administrador = new Administrador();
        
        if(txtIdA.getText().equals("")){
            JOptionPane.showMessageDialog(null, "Ingrese el ID que desea eliminar");
        }else{
            int IdA = Integer.parseInt(txtIdA.getText());
            administrador.setId_Admin(IdA);
            
            DAOadministrador.eliminarAdmin(administrador);
            
            limpiarCampoAdmin();
            
            JOptionPane.showMessageDialog(null, "Información eliminada con EXITO!!");
        }
        
    }//GEN-LAST:event_btnEliminarAActionPerformed

    private void btnModificarAActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnModificarAActionPerformed
        
        DAOadministradorImplementacion DAOadministrador = new DAOadministradorImplementacion();
        Administrador administrador = new Administrador();
        
        if(txtIdA.getText().equals("") || txtContrA.getText().equals("") || txtNombreA.getText().equals("") || txtTelefonoA.getText().equals("")){
            JOptionPane.showMessageDialog(null, "Por favor ingrese toda la información");
        }else{
            int IdA = Integer.parseInt(txtIdA.getText());
            String contraseñaA = txtContrA.getText();
            String nombreA = txtNombreA.getText();
            int telefonoA = Integer.parseInt(txtTelefonoA.getText());
            
            administrador.setId_Admin(IdA);
            administrador.setContraseñaAdmin(contraseñaA);
            administrador.setNombreAdmin(nombreA);
            administrador.setTelefonoAdmin(telefonoA);
            
            DAOadministrador.modificarAdmin(administrador);
            
            limpiarCampoAdmin();
            
            JOptionPane.showMessageDialog(null, "Información MODIFICADA con EXITO!!");
        }
        
    }//GEN-LAST:event_btnModificarAActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Inicio.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Inicio.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Inicio.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Inicio.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Inicio().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBuscarA;
    private javax.swing.JButton btnBuscarC;
    private javax.swing.JButton btnBuscarEnt;
    private javax.swing.JButton btnBuscarP;
    private javax.swing.JButton btnCargarPlan;
    private javax.swing.JButton btnCargarTablaA;
    private javax.swing.JButton btnEliminarA;
    private javax.swing.JButton btnEliminarC;
    private javax.swing.JButton btnEliminarEnt;
    private javax.swing.JButton btnEliminarP;
    private javax.swing.JButton btnModificarA;
    private javax.swing.JButton btnModificarC;
    private javax.swing.JButton btnModificarEnt;
    private javax.swing.JButton btnModificarP;
    private javax.swing.JButton btnRegistrarA;
    private javax.swing.JButton btnRegistrarC;
    private javax.swing.JButton btnRegistrarEnt;
    private javax.swing.JButton btnRegistrarP;
    private javax.swing.JButton btnTablaE;
    private javax.swing.JButton btn_CargarDatos;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JComboBox<String> jComboBox2;
    private javax.swing.JComboBox<String> jComboBox3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField3;
    private javax.swing.JTable tabla_Admin;
    private javax.swing.JTable tabla_Cliente;
    private javax.swing.JTable tabla_Entrenador;
    private javax.swing.JTable tabla_Plan;
    private javax.swing.JTextField txtContrA;
    private javax.swing.JTextField txtDuracionP;
    private javax.swing.JTextField txtEdadC;
    private javax.swing.JTextField txtEspecialidad;
    private javax.swing.JTextField txtIdA;
    private javax.swing.JTextField txtIdC;
    private javax.swing.JTextField txtIdPlan;
    private javax.swing.JTextField txtId_E;
    private javax.swing.JTextField txtNomC;
    private javax.swing.JTextField txtNomPlan;
    private javax.swing.JTextField txtNom_E;
    private javax.swing.JTextField txtNombreA;
    private javax.swing.JTextField txtPesoC;
    private javax.swing.JTextField txtTelC;
    private javax.swing.JTextField txtTelE;
    private javax.swing.JTextField txtTelefonoA;
    private javax.swing.JTextField txtValorP;
    // End of variables declaration//GEN-END:variables

   
}
